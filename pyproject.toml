[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.sdist]
exclude = [".direnv"]

[tool.setuptools_scm]
write_to = "_version.py"

[project]
name = "tptools"
version = "0.3.1"
authors = [{ name = "martin f. krafft", email = "tptools@pobox.madduck.net" }]
description = "A set of tools to export data from with TournamentSoftware"
readme = "README.md"
requires-python = ">=3.13"
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]

dependencies = [
  "python-dateutil",
  "aiohttp",
  "aiohttp-basicauth-middleware",
  "sqlmodel",
  "uvloop; sys_platform == 'linux'",
  "aiosqlite",
  "watchdog",
  "click",
  "click_extra",
  "click-async-plugins @ https://github.com/madduck/click-async-plugins/archive/refs/heads/main.zip",
  "yarl",
  "fastapi",
  "uvicorn",
  "httpx",
  "asyncinotify; sys_platform == 'linux'",
  "pywin32; sys_platform == 'win32'",
  "sqlalchemy-access; sys_platform == 'win32'",
]

[project.optional-dependencies]
dev = [
  "pytest",
  "pytest-mock",
  "pytest-asyncio",
  "pytest-subtests",
  "pytest-ruff",
  "ipdb",
  "mypy",
  "ruff",
  "pre-commit",
  "coverage",
  "pytest-cov",
  "types-pywin32",
  "types-python-dateutil",
  "fastapi[standard]",
]
build = ["hatchling"]

[project.scripts]
tpsrv = "tptools.tpsrv.cli:tpsrv"
tpshortcut = "tptools.cli.tpshortcut:main"

[tool.pytest.ini_options]
testpaths = ["tests", "integration"]
addopts = "-ra --cov=tptools --cov-report term-missing:skip-covered --no-cov-on-fail --pdbcls=IPython.terminal.debugger:TerminalPdb --ruff --ruff-format"
asyncio_default_fixture_loop_scope = "function"
log_level = "DEBUG"
log_format = "%(name)s %(levelname)s %(message)s"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["B", "C", "E", "F", "I", "W", "B9"]

[tool.mypy]
strict = true
warn_unreachable = true

[[tool.mypy.overrides]]
module = "ipdb"
ignore_missing_imports = true

[tool.coverage.run]
branch = true
omit = ["tptools/cli/tpshortcut.py"]

[tool.coverage.report]
exclude_also = [
  'def __repr__',
  'if TYPE_CHECKING:',
  'class .*\bProtocol\):',
  '@overload',
  '@(abc\.)?abstractmethod',
  'raise NotImplementedError',
  'raise AssertionError',
]
